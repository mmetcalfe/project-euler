--
-- Problem 2: Even Fibonacci numbers
-- (Published on Friday, 19th October 2001, 06:00 pm; Solved by 267974)
--
--     Each new term in the Fibonacci sequence is generated by adding
--   the previous two terms. By starting with 1 and 2, the first 10
--   terms will be:
--
--     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
--     By considering the terms in the Fibonacci sequence whose values
--   do not exceed four million, find the sum of the even-valued terms.
--
-- Note: This problem has been changed recently, please check that you
--   are using the right parameters.

nextFib :: [Integer] -> Integer
nextFib [] = 1
nextFib fl = sum . take 2 $ reverse fl

--succFibs :: [Integer] -> [Integer]
--succFibs fl = fl ++ [nextFib fl]

--fibs :: Integer -> [Integer]
--fibs n
--    | n == 0    = []
--    | otherwise = succFibs $ fibs (n - 1)

fibsLessThan :: [Integer] -> Integer -> [Integer]
fibsLessThan fl lim =
    if nxt < lim
        then fibsLessThan (fl ++ [nxt]) lim
        else fl
    where nxt = nextFib fl

main = do
    print "Hi."
    print $ fibsLessThan [] 10
    print $ sum $ fibsLessThan [] 10
    print $ fibsLessThan [] 4000000
    print $ sum $ fibsLessThan [] 4000000

