{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"isp",
				"isPrimeFactor"
			],
			[
				"sum",
				"sum3Or5"
			],
			[
				"kPla",
				"kPlayActionNewFile"
			],
			[
				"playlist",
				"playlist_path"
			],
			[
				"playli",
				"playlist_path"
			],
			[
				"taskplplm",
				"task_play_playlist_process_message"
			],
			[
				"Task",
				"TaskPlayPlaylistState"
			],
			[
				"wav_",
				"wav_stream"
			],
			[
				"task_pla",
				"task_play_file_process_message"
			],
			[
				"file",
				"file_path"
			],
			[
				"pla",
				"playlist"
			],
			[
				"kInpu",
				"kInputOption2"
			],
			[
				"kIn",
				"kInputEnter"
			],
			[
				"ver",
				"verify_fat_file_sig_or_die"
			],
			[
				"kFat",
				"kFatFileSig"
			],
			[
				"fatfs",
				"fat_file_sig"
			],
			[
				"fat_fs_",
				"fat_fs_mutex_pend"
			],
			[
				"wav_fil",
				"wav_file_name"
			],
			[
				"fat",
				"fat_fs"
			],
			[
				"wav",
				"wav_stream"
			],
			[
				"emalloc",
				"emalloc_size"
			],
			[
				"num",
				"num_written"
			],
			[
				"ass",
				"assert_audio_dev_stats"
			],
			[
				"print",
				"print_audio_dev_stats"
			],
			[
				"sample",
				"sample_buffer"
			],
			[
				"left",
				"left_channel_buff"
			],
			[
				"buff",
				"buff_size"
			],
			[
				"audio",
				"audio_dev"
			],
			[
				"span",
				"span_len"
			],
			[
				"main",
				"main_menu"
			],
			[
				"menu",
				"menu_interface"
			],
			[
				"msg",
				"msg_ptr"
			],
			[
				"mal",
				"mail_box"
			],
			[
				"mail",
				"mail_box"
			],
			[
				"quer",
				"query_result"
			],
			[
				"playl",
				"playlist"
			],
			[
				"kM",
				"kModeFlagOverwrite"
			],
			[
				"playlis",
				"playlist_item"
			],
			[
				"vector",
				"vector_size"
			],
			[
				"comm",
				"command_tokens"
			],
			[
				"Pl",
				"PlaylistItem"
			],
			[
				"path",
				"path_dispose"
			],
			[
				"resul",
				"result_str"
			],
			[
				"str",
				"string_to_int"
			],
			[
				"new",
				"path_new"
			],
			[
				"res",
				"result_path"
			],
			[
				"base",
				"base_norm"
			],
			[
				"common",
				"common_len"
			],
			[
				"ab",
				"absolute_path"
			],
			[
				"pl",
				"playlist_file"
			],
			[
				"Fat",
				"FatFile"
			],
			[
				"line",
				"line_start"
			],
			[
				"whi",
				"white_count"
			],
			[
				"dir_entry",
				"dir_entry_pos"
			],
			[
				"roo",
				"root_dir_lba"
			],
			[
				"Fwrite",
				"fat_dir_write_entry"
			],
			[
				"uint",
				"uint8_t"
			],
			[
				"Dir",
				"DirectoryEntryDate"
			],
			[
				"__",
				"__packed__"
			],
			[
				"las",
				"last_entry_pos"
			],
			[
				"0x",
				"0xFFFFFFFFul"
			],
			[
				"0x0FFFF",
				"0x0FFFFFF8ul"
			],
			[
				"fat_",
				"fat_entry"
			],
			[
				"fat_fop",
				"fat_fopen_file"
			],
			[
				"dirty",
				"sector_cache_mark_sector_dirty"
			],
			[
				"dir_",
				"dir_entry"
			],
			[
				"shor",
				"short_name_out"
			],
			[
				"Die",
				"DirectoryEntry"
			],
			[
				"kFil",
				"kFileModeDirectory"
			],
			[
				"mode",
				"mode_str"
			],
			[
				"ex",
				"fat_fs_extend_cluster_chain"
			],
			[
				"Sector",
				"SectorBuffer"
			],
			[
				"free",
				"free_entry"
			],
			[
				"0x0f",
				"0x0FFFFFFFul"
			],
			[
				"sector",
				"sector_cache"
			],
			[
				"FatF",
				"FatFilesystem"
			],
			[
				"fat_sec",
				"fat_sector_buff"
			],
			[
				"sampl",
				"samples_remaining"
			],
			[
				"vol",
				"volume_factor"
			],
			[
				"fat_print_fa",
				"fat_print_fat_file"
			],
			[
				"fat_print_fil",
				"fat_print_fat_file_pos"
			],
			[
				"kAttr",
				"kAttributeDirectory"
			],
			[
				"fat_prin",
				"fat_print_directory_entry"
			],
			[
				"err",
				"error_r"
			],
			[
				"dir",
				"dir_entry"
			],
			[
				"root",
				"root_dir_first_cluster"
			],
			[
				"attr",
				"attributes"
			],
			[
				"sect",
				"sector_index"
			],
			[
				"FatFile",
				"FatFilePos"
			],
			[
				"cluster",
				"cluster_number"
			],
			[
				"clus",
				"cluster_number"
			],
			[
				"F",
				"FatEntry"
			],
			[
				"fat_prio",
				"fat_print_fat_file_pos"
			],
			[
				"FatFil",
				"FatFilePos"
			],
			[
				"byt",
				"byte_pos"
			],
			[
				"fil",
				"file_pos"
			],
			[
				"sec",
				"sector_buff"
			],
			[
				"bpb_fa",
				"bpb_fat_size_32"
			],
			[
				"bpb",
				"bpb_common"
			],
			[
				"part",
				"part_table"
			],
			[
				"Part",
				"PartitionTableEntry"
			],
			[
				"ball",
				"ball_velocity_"
			],
			[
				"Mock",
				"MockRobotConfig"
			],
			[
				"sph",
				"sphericalFromNeck"
			],
			[
				"actual",
				"actual_objects"
			],
			[
				"MMKFLocalisa",
				"MMKFRobotLocalisationEngine"
			],
			[
				"kHead",
				"kHeadingY"
			],
			[
				"loc",
				"location_"
			],
			[
				"calc",
				"calculateOdometryMatrix"
			],
			[
				"odome",
				"odometry"
			],
			[
				"od",
				"odometryRightFoot"
			],
			[
				"right",
				"rightFootDown"
			],
			[
				"bod",
				"bodyFromAnkleInitial"
			],
			[
				"body",
				"bodyFromAnkleFinal"
			],
			[
				"true",
				"true"
			],
			[
				"head",
				"heading_diff"
			],
			[
				"norm",
				"normalizeAngle"
			],
			[
				"odom",
				"odom_old_robot_heading_"
			],
			[
				"robot",
				"robot_velocity_"
			],
			[
				"ami",
				"ambiguous_objects"
			],
			[
				"ambigu",
				"ambiguous_objects"
			],
			[
				"Sperical",
				"sphericalFromNeck"
			],
			[
				"robo",
				"robot_heading_"
			],
			[
				"vel",
				"velocity_y"
			],
			[
				"names",
				"namespace_closings"
			],
			[
				"Add",
				"AddGoals"
			],
			[
				"covarian",
				"covarianceWeights"
			],
			[
				"kH",
				"kHeadingX"
			]
		]
	},
	"buffers":
	[
		{
			"file": "unattempted/problem005_smallest_multip.hs",
			"settings":
			{
				"buffer_size": 1365,
				"line_ending": "Unix"
			}
		},
		{
			"file": "solved/problem003_largest_prime_fact.hs",
			"settings":
			{
				"buffer_size": 1193,
				"line_ending": "Unix"
			}
		},
		{
			"file": "solved/problem004_largest_palindrome_produ.hs",
			"settings":
			{
				"buffer_size": 606,
				"line_ending": "Unix"
			}
		},
		{
			"file": "solved/problem002_even_fibonacci_numbe.hs",
			"settings":
			{
				"buffer_size": 1198,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 400.0,
		"selected_items":
		[
			[
				"move",
				"File: Move"
			],
			[
				"mov",
				"File: Move"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"icts",
				"Indentation: Convert to Spaces"
			],
			[
				"new",
				"File: New File Relative to Current View"
			],
			[
				"nvif",
				"File: New View into File"
			],
			[
				"ww",
				"Word Wrap: Toggle"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"newf",
				"File: New File Relative to Current View"
			],
			[
				"newc",
				"File: New File Relative to Current View"
			],
			[
				"ne",
				"File: New File Relative to Current View"
			],
			[
				"nef",
				"File: New File Relative to Current View"
			],
			[
				"uni",
				"Permute Lines: Unique"
			],
			[
				"n",
				"File: New File Relative to Current View"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"nf",
				"File: New File Relative to Current View"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ssm",
				"Set Syntax: Makefile"
			],
			[
				"ict",
				"Indentation: Convert to Spaces"
			],
			[
				"ssc",
				"Set Syntax: C"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"new ",
				"File: New File Relative to Current View"
			],
			[
				"mo",
				"File: Move"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"new f",
				"File: New File Relative to Current View"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"ssma",
				"Set Syntax: Makefile"
			],
			[
				"ssmak",
				"Set Syntax: Makefile"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"settin",
				"Preferences: Settings - User"
			],
			[
				"renm",
				"File: Rename"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				":w",
				":w - Save"
			],
			[
				"vagra",
				"Vagrant: Up"
			],
			[
				"va",
				"Vagrant: Status"
			],
			[
				"vsta",
				"Vagrant: Status"
			],
			[
				"vst",
				"Vagrant: Status"
			],
			[
				"vagsta",
				"Vagrant: Status"
			],
			[
				"vagrant",
				"Vagrant: Destroy"
			],
			[
				"up",
				"Vagrant: Up"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"packages",
				"Package Control: List Packages"
			],
			[
				"ssr",
				"Set Syntax: Ruby"
			],
			[
				"settings",
				"Preferences: Settings - User"
			],
			[
				"ssru",
				"Set Syntax: Ruby"
			],
			[
				"sshaml",
				"Set Syntax: Ruby Haml"
			],
			[
				"ru",
				"Set Syntax: Ruby"
			],
			[
				"sshtm",
				"Set Syntax: HTML"
			],
			[
				"rub",
				"Set Syntax: Ruby"
			],
			[
				"sspt",
				"Set Syntax: Plain Text"
			],
			[
				"ss",
				"Set Syntax: MultiMarkdown"
			],
			[
				"ssba",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"ssp",
				"Set Syntax: Puppet"
			],
			[
				"sspup",
				"Set Syntax: Puppet"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"PCD",
				"Package Control: Discover Packages"
			],
			[
				"PC",
				"Package Control: List Packages"
			],
			[
				"ss h",
				"Set Syntax: HTML"
			]
		],
		"width": 457.0
	},
	"console":
	{
		"height": 335.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/mitchell/google-drive/projects/haskell/project-euler"
	],
	"file_history":
	[
		"/Users/mitchell/google-drive/projects/haskell/project-euler/solved/problem001_multiples_of_3_and.hs",
		"/Users/mitchell/google-drive/projects/haskell/project-euler/unattempted/problem005_smallest_multip.hs",
		"/Users/mitchell/google-drive/projects/haskell/project-euler/unattempted/problem007_10001st_pri.hs",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/fat.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/elec3730_assign3.xcodeproj/xcuserdata/mitchell.xcuserdatad/xcschemes/stream_play_tests.xcscheme",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/report/elec3730-assign4.tex",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/docs/pages/rmfile.tex",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/docs/manual.tex",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/sd_tests.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/task_playlist_tests.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_pl.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/path.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/wav_stream.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/hardware_audio_interrupt.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/hardware_buttons.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/hardware_audio_interrupt.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/audio/AUDIO.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/audio_dev.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/audio/AUDIO.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/a4.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/task_play_file.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/event_message_box.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/path_tests.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/playlist.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/fake_includes.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/task_play_playlist.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/stream_play_tests.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/playlist.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/task/task_play_playlist.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/task/task_play_file.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/CMakeLists.txt",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/event_message_box.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/string_utils.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/wav_file.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/fatal_error.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/sample_buffer_tests.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/menu_interface.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/struct_signatures.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/menu_interface.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/task/task_menu_interface.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/task_menu_interface.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/lcd.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/sample_buffer.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/task/task_command_interface.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/late_email.txt",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/wav_file.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/CMakeFiles/wav_play_tests.dir/flags.make",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/wav_play_tests.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_play.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/src/regressiontest.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/linuxutils/rmfile.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/docs/pages/file_read.tex",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/CMakeFiles/2.8.12.2/CMakeDetermineCompilerABI_C.bin",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/inc/interfaces/LPC2000_regs.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_rm.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/fat.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/tasks.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/sample_buffer.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/sample_buff_tests",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/lcd.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/audio_dev.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/wav_stream.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/CMakeFiles/sample_buff_tests.dir/flags.make",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/CMakeFiles/sample_buff_tests.dir/DependInfo.cmake",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/docs/pages/avr.tex",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/struct_signatures",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/string_utils.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/sector_cache.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/mprintf.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/mprintf.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/fat_debug.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_writenums.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/emalloc.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/fir_filter.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/flag_group_wrapper.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/path.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_truncate.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_touch.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_rmdir.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_pwd.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_mv.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_mkdir.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_ls.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_ledr.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_inttypes.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_help.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_dbg.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_cp.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_cd.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_cat.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command/command_add.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/sd.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/shell.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/string_to_int.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/vector.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/wav.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/fat_debug.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/spi_sd/spi_sd.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/audio/opencores_i2c.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/seven_segment_display.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/command_processor.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/emalloc.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/file_error_messages.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/spi_sd/spi_sd_wrapper.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/ansi_codes.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/CMakeFiles/CMakeDirectoryInformation.cmake",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/examples/lpc2138_ssp_standalone/demo_output_SSP.txt",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/examples/lpc2138_ssp_standalone/demo_output_SPI0.txt",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/sector_cache.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/checksum_results.txt",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/inc/types.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/command_processor.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/wav.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/file_system_lib/inc/interfaces/atmega128.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/commands.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/command.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/examples/lpc2138_ssp_standalone/lpc_config.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/CMakeFiles/wav_play_tests.dir/DependInfo.cmake",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/hardware_buttons.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/b",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/src/line_buffer.c",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/conf/config-sample-linux.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/build/CMakeFiles/cmake.check_cache",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/string_parser.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/inc/string_to_int.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/docs/pages/utils.tex",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/inc/ui.h",
		"/Users/mitchell/google-drive/2014-4th-year/elec3730/assign4/elec3730-assign4/efsl-0.2.8/conf/config-sample-avr.h"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-efsl-0.2.8/,-file_system_lib/,-hexcount.txt,-build/",
			"-efsl-0.2.8/,-file_system_lib/,-hexcount.txt,-build",
			"-efsl-0.2.8/,-file_system_lib/,-hexcount.txt",
			"-efsl-0.2.8/,-file_system_lib/",
			"-efsl-0.2.8/,-file_system_lib/,.",
			"-efsl-0.2.8/,-file_system_lib/",
			"-efsl-0.2.8/ -efsl-0.2.8/docs/ -file_system_lib/",
			"-efsl-0.2.8/ -file_system_lib/",
			"-efsl-0.2.8/",
			"efsl-0.2.8/",
			"-efsl-0.2.8/,-file_system_lib/,-report/,-Makefile,-efsl_example.c,-.git*",
			"-efsl-0.2.8/,-file_system_lib/,-report/,-Makefile,-efsl_example.c",
			"-efsl-0.2.8/,-file_system_lib/,-report/",
			"-efsl-0.2.8/,-file_system_lib/",
			"-efsl-0.2.8/ -file_system_lib/",
			"-efsl-0.2.8/ -file_system_lib",
			"-efsl-0.2.8/",
			"-*esfl*",
			"",
			"/Users/mitchell/nubots/NUbugger",
			"",
			"/Users/mitchell/nubots/NUClearPort",
			"/Users/mitchell/nubots/NUbugger",
			"/Users/mitchell/nubots/robocup",
			"/Users/mitchell/nubots/NUbugger/public/resources/js/proto/messages/localisation/proto",
			"/Users/mitchell/nubots/NUbugger",
			"/Users/mitchell/nubots/NUClearPort",
			"/Users/mitchell/nubots/NUbugger",
			"/Users/mitchell/nubots/NUClearPort/modules",
			"/Users/mitchell/nubots/NUbugger",
			"/Users/mitchell/nubots/NUClearPort/modules",
			"/Users/mitchell/nubots/NUClearPort/",
			"/Users/mitchell/nubots/NUClearPort/modules/vision",
			"",
			"/Users/mitchell/nubots/NUbugger",
			"",
			"/Users/mitchell/nubots/NUClearPort/puppet",
			"",
			"/Users/mitchell/nubots/NUbugger",
			"",
			"/Users/mitchell/nubots/NUClearPort/modules/",
			"/Users/mitchell/nubots/NUClearPort/modules/Localisation/src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"#",
			"find",
			"R",
			"r",
			"#",
			"fibs",
			"#",
			"n ",
			"#",
			"kPlayActionSetVolume",
			"menu_state_volume_process_input",
			"playlist_track_advance",
			"wav_stream_close",
			"kPlaylistActionStop",
			"kPlayActionPlay",
			"kPlayActionContinue",
			"event_message_box_post",
			"play_file",
			"task_play_file_continue",
			"playlist_track_advance",
			"void",
			"playlist_track_move_next",
			"playlist_get_current_track_file_path",
			"path_string_relative_to_absolute",
			"get",
			"parent",
			"play_file",
			"task_play_file_stop",
			"stop",
			"msg",
			"stream_play_tests",
			";",
			"playlist_file_name",
			"playlist_obj",
			"continue;",
			"playlist",
			"Playlist",
			"playlist",
			"Playlist",
			"playlist",
			";",
			"=",
			";",
			"wav_file_name",
			"continue;",
			"continue",
			";",
			"task_play_playlist_new_playlist",
			"\n",
			"free",
			"_",
			"\\item",
			"refresh",
			"dbg",
			"\ndbg",
			"_",
			"code",
			"item",
			"fat_file_load_current_sector",
			"fat_fwrite",
			"fat_fopen_dir_entry",
			"fat_dir_open_dir_entry",
			"fat_dir_get_dir_entry_by_name",
			"dir_entry",
			"fat_dir_get_next",
			"fat_dir_get_dir_entry_by_name",
			"fat_fs_get_dir_entry_by_path",
			"fat_fopen_dir_entry",
			"fat_dir_open_dir_entry",
			"fat_dir_get_dir_entry_by_name",
			"fat_fs_get_dir_entry_by_path",
			"fat_dir_entry_set_first_cluster",
			"fat_load_directory_entry",
			"fat_fs_get_root_directory_entry",
			"fat_fs_get_dir_entry_by_path",
			"create_file",
			"mprintf_mutex",
			"task_menu_interface_update_display",
			"refres",
			"kInput",
			"enum",
			"enum menu_input",
			"kInput",
			"false",
			"play_file(playlist);",
			"play_current_track",
			"            if (curr_track_file_path == NULL) {\n                EventMessage msg;\n                msg.flags = kPlayActionNewFile;\n                msg.data = curr_track_file_path;\n                event_message_box_post(task_play_file_message_box, msg, false);\n            }",
			" {",
			"playlist.",
			"rand",
			"time.h",
			"time",
			"first_track_file_path",
			"&playlist",
			"name",
			"sample_buff_advance",
			"sample_buff_write",
			"cess_inpu",
			"process_input",
			"int menu",
			"void ",
			"void",
			"menu_state",
			"menu_state_",
			"volume",
			"kInputEnter",
			"kInputDown",
			"fat_fs_get_by",
			"FatFile\\* ",
			"FatFile*",
			"FatFile ",
			"FatFile",
			"fopen_dir_en",
			"fop",
			"fatfiles",
			"playlist",
			"Playlist",
			"playlist",
			"Playlist",
			"playlist",
			"Playlist",
			"playlist",
			"Playlist",
			"playlist",
			"Playlist",
			"playlist",
			"FatFilesystem",
			"fat_fs->fat_fs_sig"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"MMKFRobotLocalisationEngine",
			"MMKFRobotLocalisationEngine\n",
			">>,\n",
			"\"utility/math/",
			"\"",
			"\"NUBlackboard/NUBlackboard.h",
			"\"",
			"\"utility/math/",
			"\"",
			"\"utility/math",
			"\"NUCamera",
			"\"NUBlackboard/NUBlackboard.h\"",
			"\"NUData/NUData.h\"",
			"\"FileFormats/",
			"\"NUData/NUData.h",
			"\"",
			"\"FileFormats",
			"\"NUIO/",
			"\"GameInformation/",
			"\"utility/math/",
			"\"FileFormats/",
			"\"utility/math/Matrix.h",
			"\"utility/math/Vector2.h",
			"\"utility/math/Vector3.h",
			"\"utility/math/Vector2.h",
			"\"FieldObjects",
			"\"Filters/",
			"\"utility/math",
			"\"utility/math/Matrix.h",
			"\"shared/utility/math",
			"CheckGameStateAndPerformRequiredResets"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "unattempted/problem005_smallest_multip.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1365,
						"regions":
						{
						},
						"selection":
						[
							[
								234,
								234
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "solved/problem003_largest_prime_fact.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1193,
						"regions":
						{
						},
						"selection":
						[
							[
								611,
								611
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "solved/problem004_largest_palindrome_produ.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 606,
						"regions":
						{
						},
						"selection":
						[
							[
								606,
								606
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "solved/problem002_even_fibonacci_numbe.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1198,
						"regions":
						{
						},
						"selection":
						[
							[
								666,
								666
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 101.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "project-euler-haskell.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"005",
				"unattempted/problem005_smallest_multip.hs"
			],
			[
				"004",
				"unattempted/problem004_largest_palindrome_produ.hs"
			],
			[
				"003",
				"unattempted/problem003_largest_prime_fact.hs"
			],
			[
				"",
				"problem002_even_fibonacci_numbe.hs"
			],
			[
				"fat",
				"inc/fat.h"
			],
			[
				"meninh",
				"inc/menu_interface.h"
			],
			[
				"reporttex",
				"report/elec3730-assign4.tex"
			],
			[
				"tplpl",
				"inc/task_play_playlist.h"
			],
			[
				"playfil",
				"src/task/task_play_file.c"
			],
			[
				"a4",
				"a4.c"
			],
			[
				"audio",
				"src/hardware_audio_interrupt.c"
			],
			[
				"tasplfil",
				"inc/task_play_file.h"
			],
			[
				"path",
				"inc/path.h"
			],
			[
				"playli",
				"src/playlist.c"
			],
			[
				"playlis",
				"inc/playlist.h"
			],
			[
				"even",
				"src/event_message_box.c"
			],
			[
				"taskplf",
				"src/task/task_play_file.c"
			],
			[
				"play",
				"inc/task_play_file.h"
			],
			[
				"fake",
				"inc/fake_includes.h"
			],
			[
				"fakein",
				"inc/fake_includes.h"
			],
			[
				"cma",
				"CMakeLists.txt"
			],
			[
				"stre",
				"stream_play_tests.c"
			],
			[
				"tppl",
				"src/task/task_play_playlist.c"
			],
			[
				"task_play_pl",
				"inc/task_play_playlist.h"
			],
			[
				"taskplay",
				"inc/task_play_file.h"
			],
			[
				"taskplayfile",
				"src/task/task_play_file.c"
			],
			[
				"menuinc",
				"src/menu_interface.c"
			],
			[
				"tasmen",
				"src/task/task_menu_interface.c"
			],
			[
				"stream",
				"stream_play_tests.c"
			],
			[
				"tmih",
				"inc/task_menu_interface.h"
			],
			[
				"tasplf",
				"inc/task_play_file.h"
			],
			[
				"plapla",
				"inc/task_play_playlist.h"
			],
			[
				"menu",
				"src/menu_interface.c"
			],
			[
				"wav_file",
				"inc/wav_file.h"
			],
			[
				"wav_stre",
				"src/wav_stream.c"
			],
			[
				"message",
				"src/event_message_box.c"
			],
			[
				"compl",
				"src/command/command_pl.c"
			],
			[
				"repo",
				"report/elec3730-assign4.tex"
			],
			[
				"report",
				"report/elec3730-assign3.tex"
			],
			[
				"taskcomm",
				"src/task/task_command_interface.c"
			],
			[
				"commpl",
				"src/command/command_pl.c"
			],
			[
				"taskplapla",
				"inc/task_play_playlist.h"
			],
			[
				"taskme",
				"src/task/task_menu_interface.c"
			],
			[
				"menuin",
				"inc/menu_interface.h"
			],
			[
				"taskplpl",
				"inc/task_play_playlist.h"
			],
			[
				"men",
				"src/menu_interface.c"
			],
			[
				"meni",
				"src/menu_interface.c"
			],
			[
				"taskmein",
				"inc/task_menu_interface.h"
			],
			[
				"taskmen",
				"src/task/task_menu_interface.c"
			],
			[
				"taskpl",
				"inc/task_play_playlist.h"
			],
			[
				"playf",
				"src/task/task_play_file.c"
			],
			[
				"playh",
				"inc/playlist.h"
			],
			[
				"playlist",
				"src/playlist.c"
			],
			[
				"sample",
				"src/sample_buffer.c"
			],
			[
				"taskm",
				"src/task/task_menu_interface.c"
			],
			[
				"lcd",
				"inc/lcd.h"
			],
			[
				"playlih",
				"inc/task_play_playlist.h"
			],
			[
				"audioin",
				"src/hardware_audio_interrupt.c"
			],
			[
				"taspla",
				"src/task/task_play_file.c"
			],
			[
				"menuint",
				"inc/menu_interface.h"
			],
			[
				"fatc",
				"src/fat.c"
			],
			[
				"wavsc",
				"src/wav_stream.c"
			],
			[
				"wavstre",
				"inc/wav_stream.h"
			],
			[
				"wavfh",
				"inc/wav_file.h"
			],
			[
				"wavf",
				"src/wav_file.c"
			],
			[
				"avf",
				"inc/wav_file.h"
			],
			[
				"strucsigh",
				"inc/struct_signatures.h"
			],
			[
				"strsig",
				"inc/struct_signatures"
			],
			[
				"playlic",
				"src/playlist.c"
			],
			[
				"fath",
				"inc/fat.h"
			],
			[
				"mprinh",
				"inc/mprintf.h"
			],
			[
				"mprint",
				"src/mprintf.c"
			],
			[
				"fatal",
				"inc/fatal_error.h"
			],
			[
				"playc",
				"src/playlist.c"
			],
			[
				"plac",
				"src/playlist.c"
			],
			[
				"wavstrh",
				"inc/wav_stream.h"
			],
			[
				"fatd",
				"src/fat_debug.c"
			],
			[
				"writen",
				"src/command/command_writenums.c"
			],
			[
				"secc",
				"src/sector_cache.c"
			],
			[
				"tasks",
				"inc/tasks.h"
			],
			[
				"a4.c",
				"a4.c"
			],
			[
				"fat.h",
				"inc/fat.h"
			],
			[
				"emallc",
				"src/emalloc.c"
			],
			[
				"emall",
				"inc/emalloc.h"
			],
			[
				"wav_strea",
				"src/wav_stream.c"
			],
			[
				"event",
				"src/event_message_box.c"
			],
			[
				"samp",
				"src/sample_buffer.c"
			],
			[
				"cmdbg",
				"src/command/command_dbg.c"
			],
			[
				"sdssw",
				"inc/spi_sd/spi_sd_wrapper.h"
			],
			[
				"command",
				"src/command/command_play.c"
			],
			[
				"wavp",
				"wav_play_tests.c"
			],
			[
				"audioc",
				"src/audio_dev.c"
			],
			[
				"playtes",
				"stream_play_tests.c"
			],
			[
				"commpla",
				"src/command/command_play.c"
			],
			[
				"pl",
				"src/command/command_pl.c"
			],
			[
				"wastc",
				"src/wav_stream.c"
			],
			[
				"commapl",
				"src/command/command_play.c"
			],
			[
				"task",
				"inc/task_play_file.h"
			],
			[
				"sambc",
				"src/sample_buffer.c"
			],
			[
				"cmak",
				"CMakeLists.txt"
			],
			[
				"wav",
				"wav_play_tests.c"
			],
			[
				"taskpf",
				"src/task/task_play_file.c"
			],
			[
				"wav_strem",
				"src/wav_stream.c"
			],
			[
				"messa",
				"src/event_message_box.c"
			],
			[
				"commandin",
				"src/task/task_command_interface.c"
			],
			[
				"commcat",
				"src/command/command_cat.c"
			],
			[
				"commtouch",
				"src/command/command_touch.c"
			],
			[
				"compla",
				"src/command/command_play.c"
			],
			[
				"commin",
				"src/task/task_command_interface.c"
			],
			[
				"hard",
				"src/hardware_buttons.c"
			],
			[
				"butt",
				"inc/hardware_buttons.h"
			],
			[
				"task_pla",
				"inc/task_play_file.h"
			],
			[
				"waf",
				"inc/wav_file.h"
			],
			[
				"sampl",
				"inc/sample_buffer.h"
			],
			[
				"wav_str",
				"src/wav_stream.c"
			],
			[
				"wav_s",
				"src/wav_stream.h"
			],
			[
				"command_inter",
				"src/task/task_command_interface.c"
			],
			[
				"emallo",
				"src/emalloc.c"
			],
			[
				"samlpe",
				"inc/sample_buffer.h"
			],
			[
				"watest",
				"wav_play_tests.c"
			],
			[
				"audiod",
				"src/audio_dev.c"
			],
			[
				"str",
				"inc/string_utils.h"
			],
			[
				"stru",
				"src/string_utils.c"
			],
			[
				"string",
				"src/string_utils.c"
			],
			[
				"string_ut",
				"inc/string_utils.h"
			],
			[
				"audih",
				"inc/audio_dev.h"
			],
			[
				"wav.",
				"inc/wav.h"
			],
			[
				"fat.",
				"src/fat.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/nubots/NUClearPort.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"selected_items":
		[
			[
				"mutable_sensor_data",
				"mutable_sensor_data"
			],
			[
				"getOdometry",
				"getOdometry"
			]
		],
		"width": 630.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 289.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
